name: Frontend Development Deploy

on:
  push:
    branches: [ "develop" ]

env:
  APP_ENV: development
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
  VITE_API_URL: ${{ secrets.SERVER_HOST }}
  APP_NAME: initpage
  ECR_REPOSITORY: 809691348554.dkr.ecr.ap-northeast-2.amazonaws.com/initpage
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache-dependency-path: '**/package.json'

      - name: Install dependencies
        run: npm install

      - name: Build React application
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Save short SHA
        id: short-sha
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DOCKER_TAG: ${{ env.APP_ENV }}
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }}:sha-${{ env.SHORT_SHA }} .
          docker push ${{ env.ECR_REPOSITORY }}:sha-${{ env.SHORT_SHA }}

      # Infra 저장소 업데이트 단계
      - name: Checkout infrastructure repository
        uses: actions/checkout@v3
        with:
          repository: TP1-OuterMSA/msa-infra
          path: msa-infra
          token: ${{ secrets.GH_PAT }}

      - name: Debug directory structure
        run: |
          cd msa-infra
          ls -la
          echo "Checking charts directory:"
          ls -la charts/
          echo "Checking services directory:"
          ls -la charts/services/ || echo "Services directory not found"
          find . -name "initpage" -type d

      - name: Update image tag in Helm chart
        run: |
          cd msa-infra/charts/services/${{ env.APP_NAME }}
          
          if [ -f values.yaml ]; then
            echo "values.yaml exists"
            cat values.yaml | head -10  # 파일 내용 일부 출력
          fi
          OLD_TAG=$(grep -oP 'tag: "\K[^"]+' values.yaml)
          sed -i "s/tag: \".*\"/tag: \"sha-${{ env.SHORT_SHA }}\"/g" values.yaml
          echo "Updated values.yaml content:"
          cat values.yaml
          if [ "$OLD_TAG" != "sha-${{ env.SHORT_SHA }}" ]; then
            echo "TAG_CHANGED=true" >> $GITHUB_ENV
            echo "OLD_TAG=$OLD_TAG" >> $GITHUB_ENV
          else
            echo "TAG_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Commit and push changes to infrastructure repo
        run: |
          cd msa-infra
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git diff-index --quiet HEAD || (git commit -m "Update ${{ secrets.APP_NAME }} image tag to sha-${{ env.SHORT_SHA }}" && git push)